/*可直接自定义插件 其它依赖通过 apply from: "custom.gradle"*/

/*
* 第一种方式：在Module中定义
* 1、给插件传参测试
* */
apply plugin: HelloPlugin
/**
 * 传参
 */
hellobean {
    name = '曹操'
    age = '1'
}
/**
 * Bean定义
 */
class HelloPluginExtension {
    String name
    String age
}

class HelloPlugin implements Plugin<Project> {
    // 此方法接受一个Project对象
    void apply(Project project) {
        System.out.println("========================");
        System.out.println("自定义Plugin的第一种方式 在我们构建项目的build.gradle脚本中直接编写!");

        // extensions 容器保存了hellobean 的参数，hellobean 为Hellobean的实体
        project.extensions.create("hellobean", HelloPluginExtension)
        System.out.println("name=${project.hellobean.name}  age=${project.hellobean.age}");

        System.out.println("========================");

        project.afterEvaluate {
            println "HelloPlugin.project.afterEvaluate= ${project.hellobean.name} age = ${project.hellobean.age}"
            // 向project对象添加hello任务

            project.task('hello') {
                println "Hello from the HelloPlugin name= ${project.hellobean.name} age = ${project.hellobean.age}"

                doFirst{
                    System.out.println("hello开始");
                }
                doLast {
                    System.out.println("hello结束");
                }
            }

            Task a = project.tasks["hello"]
            a.doFirst{
                System.out.println("doFirst");
            }
            a.doLast{
                System.out.println("doLast");
            }

            project.task('hello2',dependsOn:a) {
                System.out.println("hello2");
                doFirst{
                    System.out.println("hello2开始");
                }
                doLast {
                    System.out.println("hello2结束");
                }
            }


            project.task('hello3') {
                println "我是Hello3"

                doFirst{
                    System.out.println("我是Hello3开始");
                }
                doLast {
                    System.out.println("我是Hello3结束");
                }
            }
        }
    }

}

/**
 * 第二种方式：在buildsrc下的插件可以直接访问到
 * 尝试过了需要有.properties文件的配置才行，不然会找不见
 */
apply plugin: 'MyPlugin'

/**
 * 使用本地自定义的Task
 */
task greeting(type: com.test.one.GreetingTask) {
    greeting = 'another project working!'
}