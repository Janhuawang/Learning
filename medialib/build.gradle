apply plugin: 'com.android.library'

android {

    compileSdkVersion rootProject.ext.compileSdkVersion as Integer
    buildToolsVersion rootProject.ext.buildToolsVersion as String

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion as Integer
        targetSdkVersion rootProject.ext.targetSdkVersion as Integer
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        ndk { abiFilters 'armeabi-v7a' }
//        ndk { abiFilters 'armeabi-v7a', 'arm64-v8a' }


        externalNativeBuild {
            /*cmake {
                cppFlags "-frtti -fexceptions"
                abiFilters 'armeabi-v7a'
//                abiFilters 'armeabi-v7a', 'arm64-v8a'
                arguments "-DANDROID_STL=gnustl_static"
            }*/

            cmake {
                //设置cpp配置参数，c文件请使用CFlags
                cppFlags ""
                //设置生成指定ABI版本的so库
                abiFilters 'armeabi-v7a','arm64-v8a' //,'x86','x86_64','armeabi','mips','mips64'
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs 'src/main/jniLibs'
            jni.srcDirs = []
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':base')
    implementation 'com.googlecode.mp4parser:isoparser:1.1.21'

}
